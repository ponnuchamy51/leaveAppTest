{"version":3,"sources":["users/genu.jpg","components/Common/UI/Input/Input.jsx","components/Common/UI/DatePicker/DatePicket.jsx","utill/axios.jsx","components/Common/UI/Button/Button.jsx","components/Login/LoginData.jsx","components/Login/index.jsx","components/Common/UI/Navbar/navbar.jsx","components/LeaveHistory/TableViewLeaveDetail.jsx","components/Dashboard/index.jsx","components/Common/NotFoundPage.jsx","components/Profile/ProfileData.jsx","components/Profile/profile.jsx","components/Employees/TableViewEmployeeDetail.jsx","components/Employees/EmployeeList.jsx","components/Employees/Employees.jsx","components/LeaveRequest/LeaveRequestData.jsx","components/LeaveRequest/LeaveRequest.jsx","components/LeaveHistory/LeaveList.jsx","components/Employees/EmployeeCreateData.jsx","components/Employees/CreateEmployee.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","Component","props","inputClasses","inputElement","console","log","elementClassName","valid","touched","elementConfig","elementType","className","value","onChange","changed","type","options","map","option","displayName","label","axiosInstance","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","err","Promise","reject","Button","disabled","classes","isLoading","role","name","LoginData","changeInputHandler","event","key","updatedLoginForm","state","loginForm","updatedFormElement","target","validateInput","rules","formValid","formIdentifier","setState","isValid","errors","message","submitHandler","a","async","preventDefault","formData","post","then","res","status","setItem","history","push","email","placeholder","required","password","trim","formElementsArray","this","id","onSubmit","formElement","React","withRouter","LoginPage","Navbar","href","to","TableViewLeaveDetail","scope","leaves","leave","start_date","end_date","reason","editable","cancelable","Dashboard","get","result","NotFoundPage","ProfileData","warn","profileForm","old_leave_count","first_name","visible","last_name","gender","reference_number","phone","date_of_birth","ProfilePage","src","require","alt","TableViewEmployeeDetail","employees","department","EmployeeList","EmployeesPage","LeaveRequestData","LeaveForm","department_id","leave_type","start_date_session","end_date_session","LeaveRequestList","LeavesList","EmployeeCreateData","formType","userData","leavesData","userForm","leavesForm","user","employee_type","user_name","confirm_password","cl","scl","cpl","el","llp","userFormElementsArray","leavesFormElementsArray","CreateEmployeePage","App","path","component","exact","LeaveRequest","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb36f684.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/genu.bacfb255.jpg\";","import React from 'react';\nimport \"./input.css\";\nimport DatePickerPage from '../DatePicker/DatePicket';\n\n\nconst Input = (props) => {\n\n    let inputElement = null;\n    let inputClasses = null;\n    console.log(props)\n    let elementClassName = !props.valid ? \"form- has-success has-feedback\" : \"form- has-error has-feedback\"\n    inputClasses = !props.valid && props.touched ? \"form-control is-invalid\" : \"form-control \"\n    console.log(props.elementConfig)\n    switch (props.elementType) {\n        case 'input':\n            inputElement = <input\n                className={inputClasses}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n            />\n            break;\n        case 'date':\n            inputElement = <input\n                type=\"date\"\n                className={inputClasses}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n            />\n            break;\n        case 'select':\n            inputElement = (<select className={inputClasses}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}>\n                {props.elementConfig.options.map(option =>\n                    <option value={option.value}>{option.displayName}</option>\n                )}\n\n            </select>)\n            break;\n        case 'textArea':\n            inputElement = (<textarea className={inputClasses}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}></textarea>)\n            break;\n\n        default:\n            inputElement = <input\n                className={inputClasses}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed}\n            />\n    }\n    return (\n        <div className={elementClassName}>\n            <label>{props.elementConfig.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\nexport default Input;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { SingleDatePicker } from 'react-dates';\n\nclass DatePickerPage extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         date: null,\n         focused: null\n      }\n   }\n   render() {\n      return (\n         <div>\n            <SingleDatePicker\n               id=\"datePicker\"\n               showClearDate={true}\n               showDefaultInputIcon={true}\n               small={true}\n               {...this.props}\n               regular={true}\n               numberOfMonths={1}\n               date={this.state.date}\n               onDateChange={this.props.onChange}\n               focused={this.state.focused}\n               onFocusChange={({ focused }) =>\n                  this.setState({ focused })\n               }\n               hideKeyboardShortcutsPanel={true}\n            />\n\n         </div>\n      );\n   }\n}\n\n\nexport default DatePickerPage;","import axios from 'axios';\nlet axiosInstance = axios.create({\n  baseURL: 'https://safe-shelf-23642.herokuapp.com',\n  headers: {\n    'Access-Control-Allow-Origin': 'https://safe-shelf-23642.herokuapp.com',\n\n  },\n\n\n});\n\naxiosInstance.interceptors.request.use(function (config) {\n  const token = localStorage.getItem(\"token\");\n\n  if (token != null) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n}, function (err) {\n  return Promise.reject(err);\n});\n\nexport default axiosInstance;","import React from 'react'\n\nconst Button = (props) => {\n    return (\n        <button   disabled={props.disabled} type={props.type} className={props.classes}>\n            {props.isLoading ? <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div> : props.name }\n        </button>\n    )\n}\n\nexport default Button;","import React from \"react\"\nimport Input from \"../Common/UI/Input/Input\";\nimport { isValid } from \"ipaddr.js\";\n\nimport { withRouter } from \"react-router-dom\";\nimport axios from '../../utill/axios'\n\nimport Button from \"../Common/UI/Button/Button\";\n\nclass LoginData extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         isLoading: false,\n         loginForm: {\n            email: {\n               elementType: \"input\",\n               elementConfig: {\n                  label: \"Email\",\n                  type: 'text',\n                  placeholder: \"enter email\"\n               },\n               rules: {\n                  required: true\n               },\n               valid: false,\n               touched: false,\n               value: ''\n            },\n            password: {\n               elementType: \"input\",\n               elementConfig: {\n                  label: \"Password\",\n                  type: \"password\",\n                  placeholder: \"enter password\"\n               },\n               rules: {\n                  required: true\n               },\n               valid: false,\n               touched: false,\n               value: ''\n            },\n         },\n         errors: {\n            message: ''\n         },\n         isValid: false\n      }\n\n   }\n\n   validateInput(value, rules) {\n      let isValid = true\n      if (rules.required) {\n         isValid = value.trim() !== '' && isValid\n      }\n      return isValid;\n   }\n\n   changeInputHandler = (event, key) => {\n      const updatedLoginForm = { ...this.state.loginForm }\n      let updatedFormElement = { ...updatedLoginForm[key] }\n      updatedFormElement.value = event.target.value\n      updatedFormElement.valid = this.validateInput(updatedFormElement.value, updatedFormElement.rules)\n      updatedFormElement.touched = true\n      let formValid = true;\n      for (let formIdentifier in this.state.loginForm) {\n         formValid = this.state.loginForm[formIdentifier].valid && formValid\n      }\n      updatedLoginForm[key] = updatedFormElement\n      this.setState({ loginForm: updatedLoginForm, isValid: formValid, errors: { message: null } });\n      console.log(this.state)\n\n\n   }\n   submitHandler = async (event) => {\n      event.preventDefault();\n      let formData = {}\n      for (let formIdentifier in this.state.loginForm) {\n         formData[formIdentifier] = this.state.loginForm[formIdentifier].value\n      }\n      this.setState({ isLoading: true })\n      this.setState({ isLoading: true })\n      try {\n         await axios.post('/api/login', formData).then((res) => {\n            if (res.status === 200) {\n               this.setState({ isLoading: true })\n               console.log(res)\n               localStorage.setItem(\"token\", res['data']['data']['token']);\n               this.props.history.push(\"/dashboard\");\n            }\n\n            else {\n               this.setState({ isLoading: true })\n               this.setState({\n                  errors: {\n                     message: \"please check your credentials\"\n                  }\n               })\n            }\n         })\n      }\n      catch (e) {\n         this.setState({\n            errors: {\n               message: \"please check your credentials\"\n            }, isLoading: false\n         })\n      }\n\n      return false;\n   }\n   render() {\n      const formElementsArray = [];\n      for (let key in this.state.loginForm) {\n         formElementsArray.push({\n            id: key,\n            config: this.state.loginForm[key]\n         });\n      }\n\n\n\n      return (\n         <div className=\"box\">\n            <h1 className=\"text-center pt-4\">LoginForm</h1>\n            {this.state.errors.message ? <div className=\"text-danger alert-error fade show p-3 text-center\" >\n               <strong>{this.state.errors.message}</strong>\n            </div> : null}\n\n            <form className=\"form\" onSubmit={this.submitHandler} >\n               {formElementsArray.map(formElement => (\n                  <Input\n                     key={formElement.id}\n                     elementType={formElement.config.elementType}\n                     elementConfig={formElement.config.elementConfig}\n                     value={formElement.config.value}\n                     valid={formElement.config.valid}\n                     changed={(event) => this.changeInputHandler(event, formElement.id)}\n                  />\n               ))}\n               <div className=\"mt-4\">\n                  <Button classes={'btn btn-secondary mr-4'} type=\"button\" name=\"Reset\" />\n                  <Button classes={'btn btn-success'} type=\"submit\" name=\"Submit\" disabled={!this.state.isValid} isLoading={this.state.isLoading} />\n               </div>\n            </form>\n         </div>\n      )\n   }\n}\n\nexport default withRouter(LoginData);\n","import React from \"react\"\nimport \"./Login.css\"\nimport LoginData from \"./LoginData\"\n\nconst LoginPage = () => {\n  return (\n    <div className=\"container\">\n      <LoginData />\n    </div>\n  )\n}\n\nexport default LoginPage\n","import React from \"react\";\n\nimport { Link } from 'react-router-dom'\n\nconst Navbar= () => {\n    return (\n<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a className=\"navbar-brand\" href=\"#\">Leave App</a>\n  \n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n        <Link className=\"nav-link\" to=\"/dashboard\">Home <span className=\"sr-only\">(current)</span></Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/profile\">Profile</Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/leave-history\">Leave History</Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/apply-leave\">Apply Leave</Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/employees\">Employees</Link>\n      </li>\n    </ul>\n    \n  </div>\n</nav>\n)\n}\n\nexport default Navbar;","import React from 'react';\n\n\nconst TableViewLeaveDetail = (props) => {\n    console.log(props)\n    return (\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Start Date</th>\n                            <th scope=\"col\">End Date</th>\n                            <th scope=\"col\">Reason</th>\n                            <th scope=\"col\">Status</th>\n                            <th scope=\"col\">Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {props.leaves.map(leave => {\n                            return (\n                                <tr key={leave.id}>\n                                    <td scope=\"row\">{leave.id}</td>\n                                    <td scope=\"row\">{leave.start_date}</td>\n                                    <td scope=\"row\">{leave.end_date}</td>\n                                    <td scope=\"row\">{leave.reason}</td>\n                                    <td scope=\"row\">{leave.status ? leave.status : \"Requested\"}</td>\n                                    <td scope=\"row\">\n                                        {props.editable ? <button className=\"btn btn-sm btn-info\">Edit</button> : null}\n                                        {props.cancelable ? <button className=\"btn btn-sm btn-danger ml-1\">Cancel</button> : null}\n                                        <button className=\"btn btn-sm btn-dark ml-1\">View</button>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default TableViewLeaveDetail;","import React from 'react';\nimport axios from '../../utill/axios'\n\nimport \"./dashboard.css\";\nimport Navbar from '../Common/UI/Navbar/navbar';\nimport TableViewLeaveDetail from '../LeaveHistory/TableViewLeaveDetail';\n\nclass Dashboard extends React.Component {\n   state = {\n      leaves: []\n   };\n   componentWillMount() {\n      axios.get('api/leave-list').then((result) => {\n         this.setState({\n            leaves: result[\"data\"][\"data\"][\"leave_list\"]\n         })\n      })\n   }\n   render() {\n      return (\n         <div>\n            <Navbar />\n            <div className=\"container\" id=\"dashbaord\">\n               <div className=\"pt-4\">\n                  <h1>Dashboard</h1>\n                  <hr />\n               </div>\n               <div className=\"p-2\">\n                  <div className=\"row\">\n                     <div className=\"col-3\">\n                        <div className=\"card\" >\n                           <div className=\"card-body\">\n                              <h5 className=\"card-title\">Special title treatment</h5>\n                              <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\n                              <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n                           </div>\n                        </div>\n                     </div>\n                     <div className=\"col-3\">\n                        <div className=\"card\" >\n                           <div className=\"card-body\">\n                              <h5 className=\"card-title\">Special title treatment</h5>\n                              <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\n                              <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n                           </div>\n                        </div>\n                     </div>\n                     <div className=\"col-3\">\n                        <div className=\"card\" >\n                           <div className=\"card-body\">\n                              <h5 className=\"card-title\">Special title treatment</h5>\n                              <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\n                              <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n                           </div>\n                        </div>\n                     </div>\n                     <div className=\"col-3\">\n                        <div className=\"card\" >\n                           <div className=\"card-body\">\n                              <h5 className=\"card-title\">Special title treatment</h5>\n                              <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\n                              <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"row\">\n                     <div className=\"col-12 mt-5\">\n                        <TableViewLeaveDetail {...this.state} editable={true} cancelable />\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      )\n   }\n}\n\nexport default Dashboard;","import React from 'react';\n\n\nconst NotFoundPage = () => {\n    return (\n        <div>\n          <h4>Page Not Found</h4>\n        </div>\n    )\n}\n\nexport default NotFoundPage;","import React from \"react\"\nimport Input from \"../Common/UI/Input/Input\";\n\nimport { withRouter } from \"react-router-dom\";\nimport axios from '../../utill/axios'\n\nimport Button from \"../Common/UI/Button/Button\";\n\nclass ProfileData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            profileForm: {\n                first_name: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"First Name\",\n                        type: \"text\",\n                        placeholder: \"enter first name\",\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                last_name: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"Last Name\",\n                        type: \"text\",\n                        placeholder: \"enter first name\",\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                gender: {\n                    elementType: \"radio\",\n                    elementConfig: {\n                        label: \"Gender\",\n                        type: \"input\",\n                        options: [\n                            {\n                                value: 1,\n                                displayName: \"Male\"\n                            },\n                            {\n                                value: 2,\n                                displayName: \"Female\"\n                            }\n                        ]\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                reference_number: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"Employee ID\",\n                        type: \"text\",\n                        placeholder: \"enter reference number\",\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    disabled: true\n                },\n                phone: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"Phone Number\",\n                        type: \"text\",\n                        placeholder: \"enter phone number\",\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                email: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"Email\",\n                        type: \"email\",\n                        placeholder: \"enter email\",\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                date_of_birth: {\n                    elementType: \"date\",\n                    elementConfig: {\n                        label: \"Date Of Birth\",\n                        type: \"date\",\n                        placeholder: \"enter DOB\",\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n\n\n            },\n            errors: {\n                message: ''\n            },\n            isValid: false\n        }\n        console.log(this.state)\n\n    }\n\n    validateInput(value, rules) {\n        let isValid = true\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n        return isValid;\n    }\n\n    changeInputHandler = (event, key) => {\n        console.warn(event)\n        const updatedLoginForm = { ...this.state.profileForm }\n        let updatedFormElement = { ...updatedLoginForm[key] }\n        updatedFormElement.value = event.target.value\n        updatedFormElement.valid = this.validateInput(updatedFormElement.value, updatedFormElement.rules)\n        updatedFormElement.touched = true\n        let formValid = true;\n        for (let formIdentifier in this.state.profileForm) {\n            formValid = this.state.profileForm[formIdentifier].valid && formValid\n        }\n        updatedLoginForm[key] = updatedFormElement\n        console.log('ddd', updatedLoginForm)\n\n        this.setState({ profileForm: updatedLoginForm, isValid: formValid, errors: { message: null } });\n        console.log(this.state)\n\n\n    }\n    submitHandler = async (event) => {\n        event.preventDefault();\n        let formData = {}\n        for (let formIdentifier in this.state.profileForm) {\n            formData[formIdentifier] = this.state.profileForm[formIdentifier].value\n        }\n        this.setState({ isLoading: true })\n        this.setState({ isLoading: true })\n        formData.old_leave_count = 1\n        try {\n            await axios.post('/api/leave-request', formData).then((res) => {\n                if (res.status === 200) {\n                    this.setState({ isLoading: true })\n                    this.props.history.push(\"/dashboard\");\n                }\n                else {\n                    this.setState({ isLoading: true })\n                    this.setState({\n                        errors: {\n                            message: \"please check your info\"\n                        }\n                    })\n                }\n            })\n        }\n        catch (e) {\n            console.log(e)\n            this.setState({\n                errors: {\n                    message: \"please check your detial\"\n                }, isLoading: false\n            })\n        }\n\n        return false;\n    }\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.profileForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.profileForm[key]\n            });\n        }\n\n\n\n        return (\n            <div className=\"container\">\n                {this.state.errors.message ? <div className=\"text-danger alert-error fade show p-3 text-center\" >\n                    <strong>{this.state.errors.message}</strong>\n                </div> : null}\n\n                <form onSubmit={this.submitHandler}>\n                    <div className=\"form-row\" >\n                        {formElementsArray.map(formElement => (\n                            <div className=\"form-group col-md-5 mr-5\">\n                                <Input\n                                    key={formElement.id}\n                                    elementType={formElement.config.elementType}\n                                    elementConfig={formElement.config.elementConfig}\n                                    value={formElement.config.value}\n                                    valid={formElement.config.valid}\n                                    touched={formElement.config.touched}\n                                    visible={formElement.config.visible}\n\n                                    changed={(event) => this.changeInputHandler(event, formElement.id)}\n                                />\n                            </div>\n                        ))}\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    <button type=\"reset\" className=\"btn btn-light ml-2\">Cancel</button>\n                </form >\n            </div >\n        )\n    }\n}\n\nexport default withRouter(ProfileData);\n","import React from 'react';\nimport Navbar from '../Common/UI/Navbar/navbar';\nimport \"./profile.css\"\nimport ProfileData from './ProfileData';\n\nconst ProfilePage = () => {\n   return (\n      <div >\n         <Navbar />\n         <div className=\"container p-4\" id=\"profile\">\n            <div className=\"row\">\n               <div className=\"col-md-4 col-xs-12\">\n                  <div className=\"white-box\">\n                     <div className=\"card\" >\n                        <img className=\"card-img-top\"\n                           // @ts-ignore\n                           src={require('./../../users/genu.jpg')} alt=\"Card image cap\" />\n                        <div className=\"card-body\">\n                           <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                        </div>\n                     </div>\n\n                     <div className=\"user-btm-box\">\n                        <div className=\"col-md-4 col-sm-4 text-center\">\n                           <p className=\"text-purple\"><i className=\"ti-facebook\"></i></p>\n                           <h1>258</h1>\n                        </div>\n                        <div className=\"col-md-4 col-sm-4 text-center\">\n                           <p className=\"text-blue\"><i className=\"ti-twitter\"></i></p>\n                           <h1>125</h1>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-md-8 col-xs-12\">\n                  <div className=\"white-box\">\n                     <form className=\"form-horizontal form-material\">\n                        <ProfileData />\n                     </form>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   )\n\n\n}\n\nexport default ProfilePage;","import React from 'react';\n\n\nconst TableViewEmployeeDetail = (props) => {\n    console.log(props)\n    return (\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">First Name</th>\n                            <th scope=\"col\">Last Name</th>\n                            <th scope=\"col\">EMP ID</th>\n                            <th scope=\"col\">Department</th>\n                            <th scope=\"col\">Gender</th>\n                            <th scope=\"col\">Phone</th>\n                            <th scope=\"col\">Email</th>\n                            <th scope=\"col\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {props.employees.map(leave => {\n                            return (\n                                <tr key={leave.id}>\n                                    <td scope=\"row\">{leave.id}</td>\n                                    <td scope=\"row\">{leave.first_name}</td>\n                                    <td scope=\"row\">{leave.last_name}</td>\n                                    <td scope=\"row\">{leave.reference_number}</td>\n                                    <td scope=\"row\">{leave.department}</td>\n                                    <td scope=\"row\">{leave.gender}</td>\n                                    <td scope=\"row\">{leave.phone}</td>\n                                    <td scope=\"row\">{leave.email}</td>\n                                    <td scope=\"row\">\n                                        <button className=\"btn btn-sm btn-info\">Edit</button>\n                                        <button className=\"btn btn-sm btn-danger ml-1\">Disable</button>\n                                        <button className=\"btn btn-sm btn-dark ml-1\">View</button>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default TableViewEmployeeDetail;","import React from 'react';\nimport axios from '../../utill/axios'\n\nimport Navbar from '../Common/UI/Navbar/navbar';\nimport TableViewLeaveDetail from '../LeaveHistory/TableViewLeaveDetail';\nimport TableViewEmployeeDetail from './TableViewEmployeeDetail';\n\nclass EmployeeList extends React.Component {\n    state = {\n        employees: []\n    };\n    componentWillMount() {\n        axios.get('api/employees').then((result) => {\n            this.setState({\n                employees: result[\"data\"][\"data\"]\n            })\n        })\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"\" >\n                    <TableViewEmployeeDetail {...this.state} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EmployeeList;","import React from 'react';\nimport Navbar from '../Common/UI/Navbar/navbar';\nimport { Link } from 'react-router-dom'\nimport EmployeeList from './EmployeeList';\n\nconst EmployeesPage = () => {\n   return (\n      <div>\n         <Navbar />\n         <div className=\"container\" id=\"dashbaord\">\n            <div className=\"pt-4\">\n               <h1>Employees</h1>\n               <hr />\n            </div>\n            <div className=\"row\">\n               <div className=\"col-12\">\n                  <div className=\"float-right mr-5 mb-3\">\n                     <Link className=\"btn btn-primary\" to=\"/create/employee\">Add New</Link>\n                  </div>\n               </div>\n            </div>\n            <div className=\"row\">\n               <div className=\"col-12 m-0\">\n\n                  <EmployeeList />\n               </div>\n            </div>\n         </div>\n      </div >\n   )\n}\n\nexport default EmployeesPage;","import React from \"react\"\nimport Input from \"../Common/UI/Input/Input\";\n\nimport { withRouter } from \"react-router-dom\";\nimport axios from '../../utill/axios'\n\nimport Button from \"../Common/UI/Button/Button\";\n\nclass LeaveRequestData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            LeaveForm: {\n                department_id: {\n                    elementType: \"select\",\n                    elementConfig: {\n                        label: \"Department\",\n                        type: \"text\",\n                        placeholder: \"select department\",\n                        options: [\n                            {\n                                value: \"1\",\n                                displayName: \"MCA\"\n                            },\n                            {\n                                value: \"2\",\n                                displayName: \"MBA\"\n                            }\n                        ]\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '1',\n                    visible: true\n                },\n                leave_type: {\n                    elementType: \"select\",\n                    elementConfig: {\n                        label: \"Leave Type\",\n                        type: \"text\",\n                        placeholder: \"please select leave type\",\n                        options: [\n                            {\n                                value: \"1\",\n                                displayName: \"CL\"\n                            },\n                            {\n                                value: \"2\",\n                                displayName: \"SCL\"\n                            },\n                            {\n                                value: \"3\",\n                                displayName: \"CPL\"\n                            },\n                            {\n                                value: \"4\",\n                                displayName: \"EL\"\n                            },\n                            {\n                                value: \"5\",\n                                displayName: \"LLP\"\n                            }\n                        ]\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '1',\n                    visible: true\n                },\n                start_date: {\n                    elementType: \"date\",\n                    elementConfig: {\n                        label: \"Start Date\",\n                        type: 'date',\n                        placeholder: \"please select date\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                end_date: {\n                    elementType: \"date\",\n                    elementConfig: {\n                        label: \"End Date\",\n                        type: \"date\",\n                        placeholder: \"please select date\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                start_date_session: {\n                    elementType: \"select\",\n                    elementConfig: {\n                        label: \"Start Date Session\",\n                        type: \"text\",\n                        placeholder: \"please select start date session\",\n                        options: [\n                            {\n                                value: \"1\",\n                                displayName: \"Full Day\"\n                            },\n                            {\n                                value: \"2\",\n                                displayName: \"Start of day\"\n                            },\n                            {\n                                value: \"3\",\n                                displayName: \"End of day\"\n                            }\n                        ]\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '1',\n                    visible: true\n                },\n                end_date_session: {\n                    elementType: \"select\",\n                    elementConfig: {\n                        label: \"End Date Session\",\n                        type: \"text\",\n                        placeholder: \"please select end date session\",\n                        options: [\n                            {\n                                value: \"1\",\n                                displayName: \"Full Day\"\n                            },\n                            {\n                                value: \"2\",\n                                displayName: \"Start of day\"\n                            },\n                        ]\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '1',\n                    visible: true\n                },\n                reason: {\n                    elementType: \"textArea\",\n                    elementConfig: {\n                        label: \"Reason\",\n                        type: \"text\",\n                        placeholder: \"please enter reason\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n            },\n            errors: {\n                message: ''\n            },\n            isValid: false\n        }\n        console.log(this.state)\n\n    }\n\n    validateInput(value, rules) {\n        let isValid = true\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n        return isValid;\n    }\n\n    changeInputHandler = (event, key) => {\n        console.warn(event)\n        const updatedLoginForm = { ...this.state.LeaveForm }\n        let updatedFormElement = { ...updatedLoginForm[key] }\n        updatedFormElement.value = event.target.value\n        updatedFormElement.valid = this.validateInput(updatedFormElement.value, updatedFormElement.rules)\n        updatedFormElement.touched = true\n        let formValid = true;\n        for (let formIdentifier in this.state.LeaveForm) {\n            formValid = this.state.LeaveForm[formIdentifier].valid && formValid\n        }\n        updatedLoginForm[key] = updatedFormElement\n        console.log('ddd', updatedLoginForm)\n\n        this.setState({ LeaveForm: updatedLoginForm, isValid: formValid, errors: { message: null } });\n        console.log(this.state)\n\n\n    }\n    submitHandler = async (event) => {\n        event.preventDefault();\n        let formData = {}\n        for (let formIdentifier in this.state.LeaveForm) {\n            formData[formIdentifier] = this.state.LeaveForm[formIdentifier].value\n        }\n        this.setState({ isLoading: true })\n        this.setState({ isLoading: true })\n        formData.old_leave_count = 1\n        try {\n            await axios.post('/api/leave-request', formData).then((res) => {\n                if (res.status === 200) {\n                    this.setState({ isLoading: true })\n                    this.props.history.push(\"/dashboard\");\n                }\n                else {\n                    this.setState({ isLoading: true })\n                    this.setState({\n                        errors: {\n                            message: \"please check your info\"\n                        }\n                    })\n                }\n            })\n        }\n        catch (e) {\n            console.log(e)\n            this.setState({\n                errors: {\n                    message: \"please check your detial\"\n                }, isLoading: false\n            })\n        }\n\n        return false;\n    }\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.LeaveForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.LeaveForm[key]\n            });\n        }\n\n\n\n        return (\n            <div className=\"container\">\n                {this.state.errors.message ? <div className=\"text-danger alert-error fade show p-3 text-center\" >\n                    <strong>{this.state.errors.message}</strong>\n                </div> : null}\n\n                <form onSubmit={this.submitHandler}>\n                    <div className=\"form-row\" >\n                        {formElementsArray.map(formElement => (\n                            <div className=\"form-group col-md-5 mr-5\">\n                                <Input\n                                    key={formElement.id}\n                                    elementType={formElement.config.elementType}\n                                    elementConfig={formElement.config.elementConfig}\n                                    value={formElement.config.value}\n                                    valid={formElement.config.valid}\n                                    touched={formElement.config.touched}\n                                    visible={formElement.config.visible}\n\n                                    changed={(event) => this.changeInputHandler(event, formElement.id)}\n                                />\n                            </div>\n                        ))}\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    <button type=\"reset\" className=\"btn btn-light ml-2\">Cancel</button>\n                </form >\n            </div >\n        )\n    }\n}\n\nexport default withRouter(LeaveRequestData);\n","import React from 'react';\nimport Navbar from '../Common/UI/Navbar/navbar';\nimport LeaveRequestData from './LeaveRequestData';\n\n\nconst LeaveRequestList = () => {\n    return (\n        <div>\n            <Navbar />\n            <div className=\"container\" id=\"dashbaord\">\n                <div className=\"pt-4\">\n                    <h1>Leave Request</h1>\n                    <hr />\n                </div>\n                <div className=\"p-2\">\n                    <div className=\"row\">\n                        <div className=\"col-12 mt-2\">\n                            <LeaveRequestData />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LeaveRequestList;","import React from 'react';\nimport Navbar from '../Common/UI/Navbar/navbar';\nimport axios from '../../utill/axios'\nimport TableViewLeaveDetail from './TableViewLeaveDetail';\n\nclass LeavesList extends React.Component {\n    state = {\n        leaves: []\n    };\n    componentWillMount() {\n        axios.get('api/leave-list').then((result) => {\n            this.setState({\n                leaves: result[\"data\"][\"data\"][\"leave_list\"]\n            })\n        })\n    }\n    render() {\n        return (\n            <div>\n                <Navbar />\n                <div className=\"container\" id=\"dashbaord\">\n                    <div className=\"pt-4\">\n                        <h1>Leave Detail</h1>\n                        <hr />\n                    </div>\n                    <div className=\"p-2\">\n                        <div className=\"row\">\n                            <div className=\"col-12 mt-2\">\n                                <TableViewLeaveDetail {...this.state} />\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LeavesList;","import React from \"react\"\nimport Input from \"../Common/UI/Input/Input\";\n\nimport { withRouter } from \"react-router-dom\";\nimport axios from '../../utill/axios'\n\nimport Button from \"../Common/UI/Button/Button\";\n\nclass EmployeeCreateData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            LeaveForm: {\n                first_name: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"First Name\",\n                        type: \"text\",\n                        placeholder: \"please enter first name\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                last_name: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"Last Name\",\n                        type: \"text\",\n                        placeholder: \"please enter last name\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                reference_number: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"Employee ID\",\n                        type: \"text\",\n                        placeholder: \"please enter employee ID\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                date_of_birth: {\n                    elementType: \"date\",\n                    elementConfig: {\n                        label: \"Employee DOB\",\n                        type: \"text\",\n                        placeholder: \"please enter DOB\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                gender: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"Gender\",\n                        type: \"text\",\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                employee_type: {\n                    elementType: \"select\",\n                    elementConfig: {\n                        label: \"Type\",\n                        type: \"text\",\n                        options: [\n                            {\n                                value: \"1\",\n                                displayName: \"Teaching\"\n                            },\n                            {\n                                value: \"2\",\n                                displayName: \"Non Teaching\"\n                            },\n                        ]\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '1',\n                    visible: true\n                },\n                department_id: {\n                    elementType: \"select\",\n                    elementConfig: {\n                        label: \"Department\",\n                        type: \"text\",\n                        options: [\n                            {\n                                value: \"1\",\n                                displayName: \"MCA\"\n                            },\n                            {\n                                value: \"2\",\n                                displayName: \"\"\n                            },\n                        ]\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '1',\n                    visible: true\n                },\n\n            },\n            userForm: {\n                email: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"Email\",\n                        type: \"text\",\n                        placeholder: \"please enter email\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                user_name: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"username\",\n                        type: \"text\",\n                        placeholder: \"please enter username\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                password: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"Password\",\n                        type: \"text\",\n                        placeholder: \"please enter password\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                confirm_password: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"Confirm Password\",\n                        type: \"text\",\n                        placeholder: \"please enter confirm password\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n\n            },\n            leavesForm: {\n                cl: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"CL\",\n                        type: \"number\",\n                        placeholder: \"please enter CL\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                scl: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"SCL\",\n                        type: \"number\",\n                        placeholder: \"please enter SCL\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                cpl: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"CPL\",\n                        type: \"number\",\n                        placeholder: \"please enter CPL\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                el: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"EL\",\n                        type: \"number\",\n                        placeholder: \"please enter EL\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n                llp: {\n                    elementType: \"input\",\n                    elementConfig: {\n                        label: \"LLP\",\n                        type: \"number\",\n                        placeholder: \"please enter LLP\"\n                    },\n                    rules: {\n                        required: true\n                    },\n                    valid: false,\n                    touched: false,\n                    value: '',\n                    visible: true\n                },\n\n            },\n            errors: {\n                message: ''\n            },\n            isValid: false\n        }\n        console.log(this.state)\n\n    }\n\n    validateInput(value, rules) {\n        let isValid = true\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n        return isValid;\n    }\n\n    changeInputHandler = (event, key, formType = \"LeaveForm\") => {\n        const updatedLoginForm = { ...this.state[formType] }\n        let updatedFormElement = { ...updatedLoginForm[key] }\n        updatedFormElement.value = event.target.value\n        updatedFormElement.valid = this.validateInput(updatedFormElement.value, updatedFormElement.rules)\n        updatedFormElement.touched = true\n        let formValid = true;\n        for (let formIdentifier in this.state[formType]) {\n            formValid = this.state[formType][formIdentifier].valid && formValid\n        }\n        updatedLoginForm[key] = updatedFormElement\n        this.setState({ [formType]: updatedLoginForm, isValid: formValid, errors: { message: null } });\n    }\n    submitHandler = async (event) => {\n        event.preventDefault();\n        let formData = {};\n        let userData = {};\n        let leavesData = {};\n        for (let formIdentifier in this.state.LeaveForm) {\n            formData[formIdentifier] = this.state.LeaveForm[formIdentifier].value\n        }\n        for (let formIdentifier in this.state.userForm) {\n            userData[[formIdentifier]] = this.state.userForm[formIdentifier].value\n\n        }\n        for (let formIdentifier in this.state.leavesForm) {\n            leavesData[formIdentifier] = this.state.leavesForm[formIdentifier].value\n        }\n        this.setState({ isLoading: true })\n        this.setState({ isLoading: true })\n        formData.old_leave_count = 1\n        formData.user = userData\n        formData.leaves = leavesData\n        formData.user.role = \"staff\"\n        try {\n            await axios.post('/api/employee', formData).then((res) => {\n                if (res.status === 200) {\n                    this.setState({ isLoading: true })\n                    this.props.history.push(\"/dashboard\");\n                }\n                else {\n                    this.setState({ isLoading: true })\n                    this.setState({\n                        errors: {\n                            message: \"please check your info\"\n                        }\n                    })\n                }\n            })\n        }\n        catch (e) {\n            console.log(e)\n            this.setState({\n                errors: {\n                    message: \"please check your detial\"\n                }, isLoading: false\n            })\n        }\n\n        return false;\n    }\n    render() {\n        const formElementsArray = [];\n        const userFormElementsArray = [];\n        const leavesFormElementsArray = [];\n        for (let key in this.state.LeaveForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.LeaveForm[key]\n            });\n        }\n        for (let key in this.state.userForm) {\n            userFormElementsArray.push({\n                id: key,\n                config: this.state.userForm[key]\n            });\n        }\n        for (let key in this.state.leavesForm) {\n            leavesFormElementsArray.push({\n                id: key,\n                config: this.state.leavesForm[key]\n            });\n        }\n\n\n\n        return (\n            <div className=\"container\">\n                {this.state.errors.message ? <div className=\"text-danger alert-error fade show p-3 text-center\" >\n                    <strong>{this.state.errors.message}</strong>\n                </div> : null}\n\n                <form onSubmit={this.submitHandler}>\n                    <div className=\"row\">\n                        <div className=\"col-12 mt-3\">\n                            <h4><b>Employe Info</b></h4>\n                        </div>\n                    </div>\n                    <hr />\n                    <div className=\"form-row ml-5\" >\n                        {formElementsArray.map(formElement => (\n                            <div className=\"form-group col-md-5 mr-5\">\n                                <Input\n                                    key={formElement.id}\n                                    elementType={formElement.config.elementType}\n                                    elementConfig={formElement.config.elementConfig}\n                                    value={formElement.config.value}\n                                    valid={formElement.config.valid}\n                                    touched={formElement.config.touched}\n                                    visible={formElement.config.visible}\n                                    changed={(event) => this.changeInputHandler(event, formElement.id)}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 mt-3\">\n                            <h4><b>Login Info</b></h4>\n                        </div>\n                    </div>\n                    <hr />\n\n                    <div className=\"form-row ml-5\" >\n                        {userFormElementsArray.map(formElement => (\n                            <div className=\"form-group col-md-5 mr-5\">\n                                <Input\n                                    key={formElement.id}\n                                    elementType={formElement.config.elementType}\n                                    elementConfig={formElement.config.elementConfig}\n                                    value={formElement.config.value}\n                                    valid={formElement.config.valid}\n                                    touched={formElement.config.touched}\n                                    visible={formElement.config.visible}\n                                    changed={(event) => this.changeInputHandler(event, formElement.id, \"userForm\")}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                    <hr />\n                    <div className=\"row\">\n                        <div className=\"col-12 mt-3\">\n                            <h4><b>Leaves Info</b></h4>\n                        </div>\n                    </div>\n                    <hr />\n\n                    <div className=\"form-row ml-5\" >\n                        {leavesFormElementsArray.map(formElement => (\n                            <div className=\"form-group col-md-5 mr-5\">\n                                <Input\n                                    key={formElement.id}\n                                    elementType={formElement.config.elementType}\n                                    elementConfig={formElement.config.elementConfig}\n                                    value={formElement.config.value}\n                                    valid={formElement.config.valid}\n                                    touched={formElement.config.touched}\n                                    visible={formElement.config.visible}\n                                    changed={(event) => this.changeInputHandler(event, formElement.id, \"leavesForm\")}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                    <hr />\n                    <div className=\"row\">\n                        <div className=\"form-group col-11\">\n                            <button type=\"submit\" className=\"btn btn-primary float-right\">Submit</button>\n                            <button type=\"reset\" className=\"btn btn-light ml-2 float-right\">Cancel</button>\n                        </div>\n                    </div>\n                </form >\n            </div >\n        )\n    }\n}\n\nexport default withRouter(EmployeeCreateData);\n","import React from 'react';\nimport Navbar from '../Common/UI/Navbar/navbar';\nimport { Link } from 'react-router-dom'\nimport EmployeeList from './EmployeeList';\nimport EmployeeCreateData from './EmployeeCreateData';\n\nconst CreateEmployeePage = () => {\n    return (\n        <div>\n            <Navbar />\n            <div className=\"container\" id=\"dashbaord\">\n                <div className=\"pt-4\">\n                    <h1>Create Employee</h1>\n                    <hr />\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12 m-0\">\n                        <EmployeeCreateData />\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default CreateEmployeePage;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport LoginPage from './components/Login';\nimport Dashboard from './components/Dashboard/index';\nimport NotFoundPage from './components/Common/NotFoundPage';\nimport ProfilePage from './components/Profile/profile';\nimport EmployeesPage from './components/Employees/Employees';\nimport LeaveRequest from './components/LeaveRequest/LeaveRequest';\nimport LeaveHistories from './components/LeaveRequest/LeaveRequest';\nimport InputDatePicker from './components/Common/UI/DatePicker/DatePicket'\nimport LeavesList from './components/LeaveHistory/LeaveList';\nimport CreateEmployeePage from './components/Employees/CreateEmployee';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/dashboard\" component={Dashboard}/>\n          <Route path=\"/\" exact component={LoginPage}/>\n          <Route path=\"/profile\" exact component={ProfilePage}/>          \n          <Route path=\"/employees\" exact component={EmployeesPage}/>    \n          <Route path=\"/leave-history\" component={LeavesList}/>\n          <Route path=\"/apply-leave\" exact component={LeaveRequest}/>    \n          <Route path=\"/create/employee\" exact component={CreateEmployeePage}/>    \n          <Route component={NotFoundPage}/>    \n          </Switch>  \n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}